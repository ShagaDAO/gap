name: Publish to Hugging Face

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish'
        required: true
        default: 'main'

jobs:
  publish-dataset:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install huggingface_hub datasets
    
    - name: Login to Hugging Face
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
      run: |
        huggingface-cli login --token $HF_TOKEN
    
    - name: Prepare dataset files
      run: |
        mkdir -p hf_upload/dataset
        cp huggingface/dataset/* hf_upload/dataset/
        
        # Create data directory with samples
        mkdir -p hf_upload/dataset/data
        cp -r samples/star-atlas_100mb hf_upload/dataset/data/
        
        # Generate synthetic sample for testing
        python3 tools/generate_synth_shard.py --duration 10 --output hf_upload/dataset/data/synthetic_shard
    
    - name: Upload to HF Dataset
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
      run: |
        cd hf_upload/dataset
        huggingface-cli upload Shaga/GAP-samples . --repo-type dataset
    
    - name: Update dataset version
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
        VERSION: ${{ github.event.release.tag_name || github.event.inputs.version }}
      run: |
        # Update version in dataset script
        sed -i "s/VERSION = datasets.Version(\".*\")/VERSION = datasets.Version(\"${VERSION#v}\")/" hf_upload/dataset/gap_samples.py
        huggingface-cli upload Shaga/GAP-samples gap_samples.py --repo-type dataset

  publish-space:
    runs-on: ubuntu-latest
    needs: publish-dataset
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install huggingface_hub
    
    - name: Login to Hugging Face
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
      run: |
        huggingface-cli login --token $HF_TOKEN
    
    - name: Prepare Space files
      run: |
        mkdir -p hf_upload/space
        cp huggingface/space/* hf_upload/space/
        
        # Create Space README
        cat > hf_upload/space/README.md << 'EOF'
        ---
        title: GAP Explorer
        emoji: ðŸŽ®
        colorFrom: blue
        colorTo: green
        sdk: gradio
        sdk_version: 4.0.0
        app_file: app.py
        pinned: false
        ---
        
        # GAP Explorer
        
        Interactive GAP (Gameplay-Action Pairs) validator and visualizer.
        
        Upload GAP shards to validate against the v0.2 specification.
        EOF
    
    - name: Upload to HF Space
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
      run: |
        cd hf_upload/space
        huggingface-cli upload Shaga/gap-explorer . --repo-type space
    
  build-gap-agent:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build gap-agent package
      run: |
        cd gap-agent
        python -m build
    
    - name: Upload to release assets
      uses: actions/upload-release-asset@v1
      if: github.event_name == 'release'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: gap-agent/dist/gap_agent-*.whl
        asset_name: gap-agent-${{ github.event.release.tag_name }}.whl
        asset_content_type: application/zip 